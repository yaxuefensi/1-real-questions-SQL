和地里的面经大同小异，一上来先相互介绍一下自己，然后说一下为什么想来FB
介绍完就开始介绍今天的大致背景，SQL和product题目都是围绕ad4ad这个平台。简单来说ad4ad就是FB会找到在FB post里面卖东西的
一些人，然后联系这些人给他们创造一个广告空间，在给这些user创造广告空间的同时FB会有potential loss或者cost because FB 
could spent money on other advertisers, instead of targeting potential advertisers
介绍完背景就开始SQL了，两个table如下：

table a: date|event('impression','click','create_ad')|user_id|item_id|cost|spend
table b: user_id|country|date

table a介绍：event有三个值，其中impression就是FB为user创造的广告space，click代表user点进去了，create_ad代表user点进去之后正式create了ad。
然后cost就是FB为这个user的这个item创造广告space所花费的cost，spend就是在user create_ad之后pay给FB的，所以只有create_ad那一行的spend不
是null
第一题：number of users that FB has invited in the last 30 days for each country
不难，只需要a left join b 然后group by country就可以

第二题：avg number of impressions per user per item before user creates ad 

这道题稍微有点绕，但是仔细想一下也就想出来。先写个subquery，需要将table a自己join一下，然后找同时是impression和create_ad的record，最
后group by user，item；写完subquery再用一个AVG就可以了。做完之后有个follow up question，问avg 有什么不好的地方

product：list few metrics related to ad4ad, why these metrics. If one metric goes down, what is the reason? 

1) iterate the function of ad4ad
2) the goal of ad4ad: more posters become advertisers, revenue

3) metrics: the percentage of poseters who become advisers


1)
SELECT b.country, COUNT(DISTINC a.user_id) AS user_cnt
FROM b
LEFT JOIN a
ON a.user_id = b.user_id
WHERE  DATEDIFF(day, a.date,curdate()) < 30
GROUP BY b.country;

2)

SELECT AVG(tbl.num_impression) AS avg_imp
FROM
(
SELECT a.user_id, a.item_id, COUNT(*) AS num_impression
FROM table AS a
JOIN table AS b
ON a.user_id = b.user_id AND a.item_id = b.item_id AND a.event = 'impression' AND b.event = 'create_ad'
WHERE b.date> a.date
) AS tbl











Q1:  number of users that FB has invited in the last 30 days for each country

SELECT tableb.country, COUNT(tbl.user_id) 
FROM tableb
LEFT JOIN
(
SELECT DISTINCT date, user_id, event
FROM tablea
WHERE DATEDIFF(day,date,curdate())<30 AND event = 'impression'
) AS tbl
ON tableb.user_id = tbl.user_id
GROUP BY tableb.country;

Q2:  avg number of impressions per user per item before user creates ad 

SELECT AVG(total.imp_cnt) AS avg_imp_cnt
FROM
(
SELECT tbl.user_id, tbl.item_id, COUNT(tbl.imp_date) AS imp_cnt
FROM
(
SELECT imp.date AS imp_date, imp.user_id AS user_id, imp.item_id AS item_id, create.date AS crt_date
FROM
(
SELECT date,user_id,item_id,event
FROM tablea
WHERE event = 'impression'
) AS imp
JOIN
(
SELECT date,user_id,item_id,event
FROM tablea
WHERE event = 'create_ad'
) AS create
ON imp.user_id = create.user_id, imp.event_id = create.event_id
) AS tbl
GROUP BY user_id, event_id
) AS total






如果我没记错的话应该是
. Waral 博客有更多文章,
1. SELECT a.country, COUNT(DISTINCT a.user_id) AS num_users
FROM a LEFT JOIN b
ON a.user_id = b.user_id AND DATEDIFF(a.date, CURDATE()) <= 30
GROUP BY  a.country

2. 
SELECT AVG(sub.num_impression) AS avg_imp
FROM (SELECT a.user_id, a.item_id, 
      SUM(CASE WHEN a.event = 'impression' AND b.event IS NOT NULL THEN 1 ELSE 0 END AS) num_impression
   FROM table_a a 
   JOIN table_a b
  ON a.user_id = b.user_id AND a.item_id = b.item_id AND a.event = 'impression' AND b.event = 'create_ad'.
WHERE a.date < b.date
GROUP BY a.user_id, a.item_id) sub


大致就是这样的，然后avg就说不够robust to outliers，可以考虑用median

metric 还可以提到revenue per targeted user
