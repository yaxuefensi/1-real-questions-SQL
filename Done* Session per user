数据表有两张，均为user log, 对于A表：每一次用户进入页面分派一个unique session id，用户离开则这一个session结束，期间用户的每一个行为都会生成
一条记录；对于表B：记录一条session存在的时间。
A: date, session_id, user_id, act('enter', 'exit', 'post')
B: date, session_id, time_spent

Q1：generate average number of session per user per day. 

date	      average_number_session_per_user
2018-09-09	30

SELECT date, AVG(tbl.cnt) AS avg_cnt
FROM
(
SELECT data, user, COUNT(session_id) AS cnt
FROM a
GROUP BY date, user
) AS tbl
GROUP BY tbl.date




Q2: generate number of user per time interval. in order to measure how many user is spending certain amount of time. 比如： 

time_spent	number_of_user
0	           4
1	           6

1. what is the session/user in the last 30 days?
Table： session
column: date| sessionid | userid | event


2. display the distribution of time(in minutes) spent by each user per day
Table session
column: date| sessionid | userid | event
Table time
column: date | sessionid | time( in seconds) |userid


然后介绍面试的背景是marketplace

SQL: date|session id|user id| event, calculate the average number of sessions/user per day for the last 30 days

analytics (Case)

  
Market Place want to add a new feature, add a sell button on the top when enter market place. 1point3acres
  

   
Why we want to build this feature?
   
What Metric we need to measure this?
   
How to test?
  
  
Use the number of message sent to sellers/sessions to measure, the number decreased 10%. From 1point 3acres bbs
  

   
Why?
   
How would you measure it and test it?
   
What could we do?

谢谢楼主， 能具体说下Case第二题的意思嘛，number of message sent to sellers/sessions 和第一题有关吗

就是第一问里定义了一个session指的是每一个user每次进入marketplace算作一个session，然后在每个session里的number of message sent to seller


My solution:
Q1:
SELECT date, user_id, AVG(session_id)
FROM tablea
GROUP BY date, user_id
ORDER BY AVG(session_id) DESC;

Q2:
1) iF don't need to consider DATE

SELECT  CASE WHEN total_time<60 THEN 'less than 60 min' 
             WHEN total_time<120 THEN 'less than 120 min, more than 60 min'
             WHEN total_time<180 THEN 'less than 180 min, more than 120 min'
         ELSE 'equal to or more than 180 mins'
         END AS 'TIME SPENT',
         COUNT(DISTINCT user_id) AS num_of users
FROM
(
SELECT user_id,SUM(time_spend) AS total_time
FROM tablea
JOIN tableb
ON tablea.session_id = tableb.session_id 
GROUP BY user_id
) AS tbl
GROUP BY 1
;



















Q1.
Select date, count(sub.session_id)/count(sub.user_id) as average_number_session_per_user from
(Select distinct date, user_id, session_id 
from tableA) sub
group by date

Q2.

Select tableB.time_spend, count(sub.user_id) 
from tableB
Inner join 
(Select distinct session_id, user_id 
from tableA) sub
On (tableB.session_id = sub.session_id)
Group by tableB.time_spend

其实我觉得q2 似乎没有join tableA 的必要 因为

补充内容 (2018-9-15 05:03):.本文原创自1point3acres论坛
因为一个unique session_id 肯定对应一个unique user_id 所以自己count (session_id)就好了 就怕这么想简单了

Q1正解，可以更简化为count(distinct***)，这样去掉下面一层query

Q2因为当时和我confirm要算用户的平均耗时，所以感觉大致是

select sub.avg_time, count(sub.user_id) from
(select A.user_id, avg(B.time_spent) as avg_time
from A 
join B 
on A.session_id = B.session_id
group by user_id)sub
group by sub.avg_time

补充内容 (2018-9-15 07:50):
session_id 和 user_id不是一一对应关系啊，一个用户这一次进入网站到退出算一个session，下次再来就是另一个session了。所以是多对一的关系。

哦 我懂了… 多个session_id对应的一个user 但是题目看的是user 不是session…

需不需要 date 和 session都 要join. 
因为会不会今天来了的第一个session = 1 明天开始的第一个session还是1

SELECT time_spent, count(distinct A.user_id) as number_of_user. more info on 1point3acres
FROM
(
SELECT A.user_id,AVG(B.time_spent) as time_spent
FROM user_log A. 1point 3acres 论坛
JOIN session B ON A.date = B.date and A.session_id = B.session_id
GROUP BY 1. From 1point 3acres bbs
)
GROUP BY 1

如果一个用户 在第一天有三个动作， 在第二天有两个动作， 那么你这么算就不对了。我自己的办法是需要算多一层sub query可以求出正确答案
