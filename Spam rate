Table: user_actions
ds (STRING) | user_id (BIGINT) |post_id (BIGINT) |action (STRING) | extra (STRING)
'2018-07-01'| 1209283021       | 329482048384792 | 'view'         |
'2018-07-01'| 1209283021       | 329482048384792 | 'like'         | 
'2018-07-01'| 1938409273       | 349573908750923 | 'reaction'     | 'LOVE'
'2018-07-01'| 1209283021       | 329482048384792 | 'comment'      | 'Such nice Raybans'
'2018-07-01'| 1238472931       | 329482048384792 | 'report'       | 'SPAM'
'2018-07-01'| 1298349287       | 328472938472087 | 'report'       | 'NUDITY'
'2018-07-01'| 1238712388       | 329482048384792 | 'reshare'      | 'I wanted to share with you all'


Q1: How many posts were reported yesterday for each report Reason?

SELECT extra, COUNT(DISTINCT post_id) AS report_cnt
FROM user_actions
WHERE action = 'report' and DATE(ds) = DATEADD(day,-1,curdate())
GROUP BY extra





SELECT extra, COUNT(DISTINCT post_id)
FROM user_actions
WHERE action = 'report' AND date(ds) = DATEADD(day,-1,curdate())
GROUP BY extra;


Table: reviewer_removals
ds (STRING) | reviewer_id (BIGINT) | post_id (BIGINT) |  
'2018-07-01'| 3894729384729078     | 329482048384792  |                
'2018-07-01'| 8477594743909585     | 388573002873499  |

Q2: What percent of daily content that users view on Facebook is actually Spam? 



SELECT u.date, COUNT(DISTINCT b.post_id)/COUNT(DISTINCT a.post_id)  AS spam_rate
FROM user_action AS u
LEFT JOIN reviewer_removals AS r
ON u.post_id = r.post_id  
WHERE a.action = 'view'
GROUP BY u.date;



SELECT a.date, COUNT(DISTINCT r.post_id)/COUNT(DISTINCT a.post_id) AS spam_rate
FROM user_actions AS a
LEFT JOIN reviewer_removals AS r
ON a.post_id = r.post_id
WHERE a.action = 'view'
GROUP BY a.date;





Q3: Facebook has decided to be proactive about SPAM, instead of merely reactive. We decide to address the SPAM 
problem through a Machine Learning solution predicting whether a given post is indeed SPAM. We want to use the 
predictions in order to downrank/deprioritize suspected SPAM from news feed. 
